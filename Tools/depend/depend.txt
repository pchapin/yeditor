
This is a quick and dirty document that describes how to use DEPEND.

DEPEND is a program that simplifies make file managment. DEPEND will scan all the source files
that make up your project and note all the #included headers. It will then write an output file
that contains a list of all headers included by each source file. The output file has a format
suitable to be cut and pasted into a makefile. DEPEND is smart enough to scan included headers
for more #include statements so that when headers include other headers, DEPEND will still get
things right.

To use DEPEND, you must create a file that contains a list of all the source files in your
project. Put one name on each line. Blank lines and lines that start with a '#' character are
ignored. Furthermore, anything after a '#' character is ignored even on lines that contain the
name of a source file. You can only put one source file name on each line, however. See the file
DEPEND.DEP in the distribution for an example.

The simplest way to run DEPEND is as show below:

     DEPEND input.dep output.out

where "input.dep" is the file containing the list of source files to scan and "output.out" is
where DEPEND will put it's dependency lists. You can paste output.out into your makefile. DEPEND
does not, however, update anything else in your makefile -- it's up to you to properly adjust
your OBJS macro (if you are using one) and any other file that needs a list of your project's
object files (such as a linker response file). Future versions of DEPEND may take on some of
these chores as well.

DEPEND ignores any #include files with names surrounded with "<...>" characters. DEPEND only
notes and processes #include files with names surrounded with quotation marks. The assumption
here is that headers surrounded with angle brackets are either compiler library headers or
headers that have been provided by a third party library. Such headers never change and don't
need to be part of the makefile. Headers with names surrounded with quotation marks are project
specific headers that may change and thus should be in the makefile. This behavior does dictate
that you use a certain style when writing your #include statements.

If you keep headers in a different directory than your other source files, you can tell DEPEND
about that with the -I command line switch. For example:

     DEPEND -Isubdir;t:\lib\netlib\include input.dep output.out

If DEPEND sees something like: #include "header.h" in a source file it will look for header.h,
subdir\header.h, and t:\lib\netlib\include\header.h in that order. This gives you a way to
direct depend to a header library in a manner similar to the way you would direct the compiler
to such a library (most compilers use the -I command line switch for that purpose too). DEPEND
puts the "full" name into the makefile, so MAKE doesn't have to be so smart about things.

Keep in mind that DEPEND should only be used to scan header files that might change during
project development. Since header libraries are often part of third party libraries, they
typically don't change. You won't need the -I command line option on DEPEND as often as you'll
want to use it with your compiler. However, in a large project, you might want to put all the
project specific headers in a subdirectory to get them out of the way. DEPEND can handle that
organization.

DEPEND rather does expect that the source files and their compiled object files will both reside
in working directory. Don't try to get too fancy by putting paths on the source files in the
input.dep file. It might not work very well (it will depend on how your MAKE handles things).

The Open Watcom make program uses the line continuation character of '&'. Thus DEPEND allows you
to specify the continuation character to use in the output file:

     DEPEND -c& input.dep output.out

The '\' character is the default.

DEPEND comes in DOS, OS/2 (32bit), and Win32 (console mode) flavors. Rename DEPEND.DOS,
DEPEND.OS2, or DEPEND.W32, as you desire, to DEPEND.EXE. WARNING: Since OS/2's command processor
uses the '&' character for special purposes, it is necessary to quote it when it appears in a
DEPEND command line:

     DEPEND "-c&" input.dep output.out

DEPEND requires ANSI.SYS handling installed for its display to look good.

DEPEND was compiled using Open Watcom.

All the various control files are in the distribution with names that should be self evident.
The source code in this distribution is for version 2.3. However, only the Win32 executable is
version 2.3. The DOS and OS/2 executables are version 2.2. There is no significant change
between versions 2.2. and 2.3. The new version only updates some of the library source modules
and fixes a minor bug in FILENAME.CPP (NULL pointer dereference).

