
// Put system-wide options for PC-Lint here and project specific options in project lint files.
// Here "system-wide" refers to compiler tweaks, standard and third party library support, and
// global lint policy.

// Environment Options
//====================
-i"%BOOST_ROOT%"
+libdir("%BOOST_ROOT%")


// C Standard Library Options
//============================
// Okay to ignore the return value of certain standard functions.
-esym(534, std::strcpy)
-esym(534, std::memcpy)
-esym(534, std::memmove)
-esym(534, std::memset)
-esym(534, ungetc)          // REVISIT!


// C++ Standard Library Options
//=============================
// Okay to ignore return values from the following.
-esym(534, "std::basic_string<char,std::char_traits<char>,std::allocator<char>>::append")
-esym(534, "std::basic_string<char,std::char_traits<char>,std::allocator<char>>::erase")


// Boost Options
//==============
// -wlib(0)                 // PC-Lint reports some errors in the Boost headers. (PC-Lint bugs?)
-esym(1509, "noncopyable")  // Okay for boost::noncopyable to have a non-virtual destructor.


// General Options
// ===============
-e537    // Okay to include the same header multiple times.
-e830    // Turn of 'Location cited in prior message' messages. We are interactive.
-e831    // ... turn this on off too (it is similar to 830).
-e1511   // Okay to hide non-virtual members in (private!) base class. REVISIT!
-e1551   // Okay to throw exception in destructor. REVISIT!
-e1712   // Okay to leave default constructor undefined.
-e1725   // Okay to have class members that are references.
-e1727   // Okay to define symbols inline after initial declaration.
-e1774   // Okay to downcast without using dynamic_cast. REVISIT!
-e1904   // Okay to use C style comments.
-e1923   // Okay to use #define constants (they are needed for conditional compilation).
-e1932   // Okay to use non-abstract base classes.
-hs      // Put a space between messages so we have a prayer of being able to read them.


// PC-Lint Bug Workarounds
//========================

// These items should be reviewed periodically to see if they are still appropriate.

// Microsoft Visual C++
// --------------------
// The following issues might only be relevant when the MS compiler is used.

// The following came from the PC-Lint forum. I'm not sure of the proper solution.
//
// Deal with problems in Microsoft Visual Studio C++ include file ktmtypes.h Need to suppress
// "Symbol redeclared (TypeDiff) conflicts with Location" errors for a few symbols.
//-esym(18, _TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT::UOW)
//-esym(18, _TRANSACTION_LIST_ENTRY::UOW)
//-esym(18, _KCRM_TRANSACTION_BLOB::UOW)
//-esym(38, _KCRM_TRANSACTION_BLOB::*)

// Microsoft enabled TR1 support by default. However, certain templates in its TR1 library cause
// PC-Lint to emit redefinition errors. See
//
//      http://www.gimpel.com/Discussion.cfm?ThreadID=2996
//
// To workaround this, disable TR1 support in PC-Lint's eyes. This is not really a PC-Lint bug
// (I don't think) but it is handled here because it is "bug-like."
//--u_HAS_TR1
